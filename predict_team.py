# -*- coding: utf-8 -*-
"""predict_team.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ojf2tziDp5_XUuW-hEHOJceMVL7tWUGU
"""

#upload csv file
from google.colab import files
uploaded = files.upload()

#import libraries
import numpy as np
import pandas as pd

#read csv file using pandas
dataset = pd.read_csv('train.csv')

#rename column name for eay understand
dataset.rename(columns={'Team 1': 'team1', 'Team 2' : 'team2','Winner (team 1=1, team 2=0)':'winner'}, inplace=True)

#Create a column of toss(random number of 0's and 1's)
dataset['Random_score'] = np.random.randint(0,2,size=(len(dataset),1))

win = dataset['Random_score']
w = []
for i,j,k in zip(dataset['team1'],dataset['team2'],win):
  if k == 0:
    w.append(j)
  else:
    w.append(i)
for i in range(len(dataset)):
  dataset['Toss'][i] = w[i]

#crete column of 'Predict' to predict a team win the match
dataset.rename(columns={},inplace=True)
t1 = dataset['team1']
t2 = dataset['team2']
winn = dataset['winner']
winners = []
for i,j,k in zip(t1,t2,winn):
  if k == 0:
    winners.append(j)
  else:
    winners.append(i)
for i in range(len(dataset)):
  dataset['Predict'][i] = winners[i]

#create dictionaries 
encode = {'team1': {'Airport Flyers':1,'Bellandur Froth Fighters':2,'Electronic City Power Savers':3,'Forum Fans':4,'HSR High Rent Payers':5,'Indranagar Pub Watchers':6,'Koramangala Traffic Jammers':7,'Marathalli Chokers ':8,'Sarjapur Water Tankers':9,'Silkboard Slow Movers':10,'Whitefield Water Loggers ':11 },
          'team2':{'Airport Flyers':1,'Bellandur Froth Fighters':2,'Electronic City Power Savers':3,'Forum Fans':4,'HSR High Rent Payers':5,'Indranagar Pub Watchers':6,'Koramangala Traffic Jammers':7,'Marathalli Chokers ':8,'Sarjapur Water Tankers':9,'Silkboard Slow Movers':10,'Whitefield Water Loggers ':11  },
           'City':{'Electronic City':2,'Koramangala':5,'Marathalli': 6,'Indranagar': 4,'Whitefield':9,'Bellandur': 1,'HSR': 3,'Sarjapur':7,'Silkboard':8},
          'Toss': {'Airport Flyers':1,'Bellandur Froth Fighters':2,'Electronic City Power Savers':3,'Forum Fans':4,'HSR High Rent Payers':5,'Indranagar Pub Watchers':6,'Koramangala Traffic Jammers':7,'Marathalli Chokers ':8,'Sarjapur Water Tankers':9,'Silkboard Slow Movers':10,'Whitefield Water Loggers ':11 },
          'Predict':{'Airport Flyers':1,'Bellandur Froth Fighters':2,'Electronic City Power Savers':3,'Forum Fans':4,'HSR High Rent Payers':5,'Indranagar Pub Watchers':6,'Koramangala Traffic Jammers':7,'Marathalli Chokers ':8,'Sarjapur Water Tankers':9,'Silkboard Slow Movers':10,'Whitefield Water Loggers ':11}}
dataset.replace(encode, inplace=True)

#import libraries
from sklearn.ensemble import RandomForestRegressor
from sklearn.ensemble import RandomForestClassifier
from sklearn import metrics
from sklearn.metrics import confusion_matrix

#classification model
def classification_model(model, data, predictors, outcome):
  model.fit(data[predictors],data[outcome])
  predictions = model.predict(data[predictors])
  
  accuracy = metrics.accuracy_score(predictions,data[outcome])
  print('Accuracy : %s' % '{0:.3%}'.format(accuracy))

#logistic regression
from sklearn.linear_model import LogisticRegression
model = LogisticRegression()
outcome_var = ['Predict']
predictor_var = ['City','team1','team2','Toss']
classification_model(model, dataset,predictor_var,outcome_var)

#randomforest classifier
m = RandomForestClassifier(n_estimators=100)
outcome_var = ['Predict']
predictor_var = ['City','team1','team2','Toss']
classification_model(m, dataset,predictor_var,outcome_var)

dicVal = encode['Predict']

#enter the values to predict team win the match
team1='Koramangala Traffic Jammers'
team2='Whitefield Water Loggers '
Toss ='Koramangala Traffic Jammers'
input=['9',dicVal[team1],dicVal[team2],dicVal[Toss]]
input = np.array(input).reshape((1, -1))
output=m.predict(input)
print(list(dicVal.keys())[list(dicVal.values()).index(output)])

#probablity score
prob = m.predict_proba(input)
print(prob)